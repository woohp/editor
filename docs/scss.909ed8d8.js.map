{"mappings":"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","sources":["./node_modules/monaco-editor/esm/vs/basic-languages/scss/scss.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var conf = {\r\n    wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|([@$#!.:]?[\\w-?]+%?)|[@#!.]/g,\r\n    comments: {\r\n        blockComment: ['/*', '*/'],\r\n        lineComment: '//'\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\r\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\r\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\r\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\r\n        { open: \"'\", close: \"'\", notIn: ['string', 'comment'] }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" }\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp('^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/'),\r\n            end: new RegExp('^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/')\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.scss',\r\n    ws: '[ \\t\\n\\r\\f]*',\r\n    identifier: '-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\r\n    brackets: [\r\n        { open: '{', close: '}', token: 'delimiter.curly' },\r\n        { open: '[', close: ']', token: 'delimiter.bracket' },\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\r\n        { open: '<', close: '>', token: 'delimiter.angle' }\r\n    ],\r\n    tokenizer: {\r\n        root: [{ include: '@selector' }],\r\n        selector: [\r\n            { include: '@comments' },\r\n            { include: '@import' },\r\n            { include: '@variabledeclaration' },\r\n            { include: '@warndebug' },\r\n            ['[@](include)', { token: 'keyword', next: '@includedeclaration' }],\r\n            [\r\n                '[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)',\r\n                { token: 'keyword', next: '@keyframedeclaration' }\r\n            ],\r\n            ['[@](page|content|font-face|-moz-document)', { token: 'keyword' }],\r\n            ['[@](charset|namespace)', { token: 'keyword', next: '@declarationbody' }],\r\n            ['[@](function)', { token: 'keyword', next: '@functiondeclaration' }],\r\n            ['[@](mixin)', { token: 'keyword', next: '@mixindeclaration' }],\r\n            ['url(\\\\-prefix)?\\\\(', { token: 'meta', next: '@urldeclaration' }],\r\n            { include: '@controlstatement' },\r\n            { include: '@selectorname' },\r\n            ['[&\\\\*]', 'tag'],\r\n            ['[>\\\\+,]', 'delimiter'],\r\n            ['\\\\[', { token: 'delimiter.bracket', next: '@selectorattribute' }],\r\n            ['{', { token: 'delimiter.curly', next: '@selectorbody' }]\r\n        ],\r\n        selectorbody: [\r\n            ['[*_]?@identifier@ws:(?=(\\\\s|\\\\d|[^{;}]*[;}]))', 'attribute.name', '@rulevalue'],\r\n            { include: '@selector' },\r\n            ['[@](extend)', { token: 'keyword', next: '@extendbody' }],\r\n            ['[@](return)', { token: 'keyword', next: '@declarationbody' }],\r\n            ['}', { token: 'delimiter.curly', next: '@pop' }]\r\n        ],\r\n        selectorname: [\r\n            ['#{', { token: 'meta', next: '@variableinterpolation' }],\r\n            ['(\\\\.|#(?=[^{])|%|(@identifier)|:)+', 'tag'] // selector (.foo, div, ...)\r\n        ],\r\n        selectorattribute: [\r\n            { include: '@term' },\r\n            [']', { token: 'delimiter.bracket', next: '@pop' }]\r\n        ],\r\n        term: [\r\n            { include: '@comments' },\r\n            ['url(\\\\-prefix)?\\\\(', { token: 'meta', next: '@urldeclaration' }],\r\n            { include: '@functioninvocation' },\r\n            { include: '@numbers' },\r\n            { include: '@strings' },\r\n            { include: '@variablereference' },\r\n            ['(and\\\\b|or\\\\b|not\\\\b)', 'operator'],\r\n            { include: '@name' },\r\n            ['([<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,])', 'operator'],\r\n            [',', 'delimiter'],\r\n            ['!default', 'literal'],\r\n            ['\\\\(', { token: 'delimiter.parenthesis', next: '@parenthizedterm' }]\r\n        ],\r\n        rulevalue: [\r\n            { include: '@term' },\r\n            ['!important', 'literal'],\r\n            [';', 'delimiter', '@pop'],\r\n            ['{', { token: 'delimiter.curly', switchTo: '@nestedproperty' }],\r\n            ['(?=})', { token: '', next: '@pop' }] // missing semicolon\r\n        ],\r\n        nestedproperty: [\r\n            ['[*_]?@identifier@ws:', 'attribute.name', '@rulevalue'],\r\n            { include: '@comments' },\r\n            ['}', { token: 'delimiter.curly', next: '@pop' }]\r\n        ],\r\n        warndebug: [['[@](warn|debug)', { token: 'keyword', next: '@declarationbody' }]],\r\n        import: [['[@](import)', { token: 'keyword', next: '@declarationbody' }]],\r\n        variabledeclaration: [\r\n            // sass variables\r\n            ['\\\\$@identifier@ws:', 'variable.decl', '@declarationbody']\r\n        ],\r\n        urldeclaration: [\r\n            { include: '@strings' },\r\n            ['[^)\\r\\n]+', 'string'],\r\n            ['\\\\)', { token: 'meta', next: '@pop' }]\r\n        ],\r\n        parenthizedterm: [\r\n            { include: '@term' },\r\n            ['\\\\)', { token: 'delimiter.parenthesis', next: '@pop' }]\r\n        ],\r\n        declarationbody: [\r\n            { include: '@term' },\r\n            [';', 'delimiter', '@pop'],\r\n            ['(?=})', { token: '', next: '@pop' }] // missing semicolon\r\n        ],\r\n        extendbody: [\r\n            { include: '@selectorname' },\r\n            ['!optional', 'literal'],\r\n            [';', 'delimiter', '@pop'],\r\n            ['(?=})', { token: '', next: '@pop' }] // missing semicolon\r\n        ],\r\n        variablereference: [\r\n            // sass variable reference\r\n            ['\\\\$@identifier', 'variable.ref'],\r\n            ['\\\\.\\\\.\\\\.', 'operator'],\r\n            ['#{', { token: 'meta', next: '@variableinterpolation' }] // sass var resolve\r\n        ],\r\n        variableinterpolation: [\r\n            { include: '@variablereference' },\r\n            ['}', { token: 'meta', next: '@pop' }]\r\n        ],\r\n        comments: [\r\n            ['\\\\/\\\\*', 'comment', '@comment'],\r\n            ['\\\\/\\\\/+.*', 'comment']\r\n        ],\r\n        comment: [\r\n            ['\\\\*\\\\/', 'comment', '@pop'],\r\n            ['.', 'comment']\r\n        ],\r\n        name: [['@identifier', 'attribute.value']],\r\n        numbers: [\r\n            ['(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?', { token: 'number', next: '@units' }],\r\n            ['#[0-9a-fA-F_]+(?!\\\\w)', 'number.hex']\r\n        ],\r\n        units: [\r\n            [\r\n                '(em|ex|ch|rem|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?',\r\n                'number',\r\n                '@pop'\r\n            ]\r\n        ],\r\n        functiondeclaration: [\r\n            ['@identifier@ws\\\\(', { token: 'meta', next: '@parameterdeclaration' }],\r\n            ['{', { token: 'delimiter.curly', switchTo: '@functionbody' }]\r\n        ],\r\n        mixindeclaration: [\r\n            // mixin with parameters\r\n            ['@identifier@ws\\\\(', { token: 'meta', next: '@parameterdeclaration' }],\r\n            // mixin without parameters\r\n            ['@identifier', 'meta'],\r\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }]\r\n        ],\r\n        parameterdeclaration: [\r\n            ['\\\\$@identifier@ws:', 'variable.decl'],\r\n            ['\\\\.\\\\.\\\\.', 'operator'],\r\n            [',', 'delimiter'],\r\n            { include: '@term' },\r\n            ['\\\\)', { token: 'meta', next: '@pop' }]\r\n        ],\r\n        includedeclaration: [\r\n            { include: '@functioninvocation' },\r\n            ['@identifier', 'meta'],\r\n            [';', 'delimiter', '@pop'],\r\n            ['(?=})', { token: '', next: '@pop' }],\r\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }]\r\n        ],\r\n        keyframedeclaration: [\r\n            ['@identifier', 'meta'],\r\n            ['{', { token: 'delimiter.curly', switchTo: '@keyframebody' }]\r\n        ],\r\n        keyframebody: [\r\n            { include: '@term' },\r\n            ['{', { token: 'delimiter.curly', next: '@selectorbody' }],\r\n            ['}', { token: 'delimiter.curly', next: '@pop' }]\r\n        ],\r\n        controlstatement: [\r\n            [\r\n                '[@](if|else|for|while|each|media)',\r\n                { token: 'keyword.flow', next: '@controlstatementdeclaration' }\r\n            ]\r\n        ],\r\n        controlstatementdeclaration: [\r\n            ['(in|from|through|if|to)\\\\b', { token: 'keyword.flow' }],\r\n            { include: '@term' },\r\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }]\r\n        ],\r\n        functionbody: [\r\n            ['[@](return)', { token: 'keyword' }],\r\n            { include: '@variabledeclaration' },\r\n            { include: '@term' },\r\n            { include: '@controlstatement' },\r\n            [';', 'delimiter'],\r\n            ['}', { token: 'delimiter.curly', next: '@pop' }]\r\n        ],\r\n        functioninvocation: [['@identifier\\\\(', { token: 'meta', next: '@functionarguments' }]],\r\n        functionarguments: [\r\n            ['\\\\$@identifier@ws:', 'attribute.name'],\r\n            ['[,]', 'delimiter'],\r\n            { include: '@term' },\r\n            ['\\\\)', { token: 'meta', next: '@pop' }]\r\n        ],\r\n        strings: [\r\n            ['~?\"', { token: 'string.delimiter', next: '@stringenddoublequote' }],\r\n            [\"~?'\", { token: 'string.delimiter', next: '@stringendquote' }]\r\n        ],\r\n        stringenddoublequote: [\r\n            ['\\\\\\\\.', 'string'],\r\n            ['\"', { token: 'string.delimiter', next: '@pop' }],\r\n            ['.', 'string']\r\n        ],\r\n        stringendquote: [\r\n            ['\\\\\\\\.', 'string'],\r\n            [\"'\", { token: 'string.delimiter', next: '@pop' }],\r\n            ['.', 'string']\r\n        ]\r\n    }\r\n};\r\n"],"names":["conf","wordPattern","comments","blockComment","lineComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","ws","identifier","token","tokenizer","root","include","selector","next","selectorbody","selectorname","selectorattribute","term","rulevalue","switchTo","nestedproperty","warndebug","import","variabledeclaration","urldeclaration","parenthizedterm","declarationbody","extendbody","variablereference","variableinterpolation","comment","name","numbers","units","functiondeclaration","mixindeclaration","parameterdeclaration","includedeclaration","keyframedeclaration","keyframebody","controlstatement","controlstatementdeclaration","functionbody","functioninvocation","functionarguments","strings","stringenddoublequote","stringendquote"],"version":3,"file":"scss.909ed8d8.js.map"}