{"mappings":"kxCAIWA,EAAAA,CACPC,SAAAA,CACIC,YAAa,KACbC,aAAAA,CAAe,KAAM,OAEzBC,SAAAA,CAAAA,CACK,IAAK,KAAA,CACL,IAAK,KAAA,CACL,IAAK,MAEVC,iBAAAA,CAAAA,CACMC,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,IAAKC,MAAAA,CAAQ,SAAU,aACzCF,KAAM,IAAKC,MAAO,IAAKC,MAAAA,CAAQ,YAC/BF,KAAM,IAAKC,MAAO,IAAKC,MAAAA,CAAQ,SAAU,aACzCF,KAAM,MAAOC,MAAO,MAAOC,MAAAA,CAAQ,YAEzCC,iBAAAA,CAAAA,CACMH,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAExBG,QAAAA,CACIC,QAAAA,CACIC,MAAO,oBACPC,IAAK,0BAINC,EAAAA,CACPC,aAAc,UACdC,aAAc,QACdC,SAAAA,CACI,WACA,UACA,aACA,OACA,KACA,OACA,SACA,SACA,SACA,OACA,KACA,QACA,QACA,SACA,YACA,SACA,QACA,UACA,KACA,OACA,QACA,WACA,UACA,OACA,OACA,UACA,QACA,QACA,QACA,QACA,MACA,OACA,QACA,QACA,OACA,MACA,QACA,UACA,KACA,UACA,WACA,MACA,WACA,MACA,YACA,WACA,OACA,OACA,UACA,MACA,UACA,QACA,WACA,OACA,SACA,OACA,KACA,KACA,MACA,SAEJC,aAAAA,CAAe,MAAO,SAAU,SAAU,QAC1CC,UAAAA,CACI,IACA,IACA,IACA,IACA,KACA,IACA,KACA,KACA,KACA,KACA,IACA,IACA,KACA,KACA,IACA,KACA,KACA,KACA,MACA,KACA,KACA,KACA,MACA,MACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,KACA,KACA,IACA,MACA,KACA,IACA,IACA,MAGJC,QAAS,wBACTC,QAAS,wEACTC,OAAQ,cACRC,YAAa,oBACbC,aAAc,oBACdC,UAAW,iCACXC,UAAW,yBACXC,UAAW,+EAEXC,UAAAA,CACIC,KAAAA,CAAAA,CAAQ,OAAQ,qBAAA,CAAwBC,QAAS,WACjDC,OAAAA,EAGQ,gBAAA,CAEIC,MAAAA,CACIC,gBAAiB,kBACjBC,YAAa,UACbC,WAAY,iBAIvB,iBAAkB,oBAGjBL,QAAS,gBAGP,4DAAA,CACEM,MAAO,SAAUC,QAAS,QAASC,KAAM,aAG9C,aAAc,eAGd,WAAY,aAAA,CACZ,mBAAoB,aAAA,CACpB,gBAAiB,aAAA,CAEd,WAAA,CAEIN,MAAAA,CACIO,aAAc,YACdJ,WAAY,OAKvB,kCAAmC,gBAAA,CACnC,6CAA8C,gBAAA,CAC9C,sBAAuB,cAAA,CACvB,yBAA0B,gBAAA,CAC1B,yBAA0B,iBAAA,CAC1B,cAAe,WAEf,QAAS,cAET,kBAAmB,kBAAA,CACnB,kBAAmB,kBAAA,CACnB,IAAK,SAAU,kBAAA,CACf,IAAK,SAAU,mBAGpBK,WAAAA,CAAAA,CACK,aAAc,IAAA,CACd,eAAgB,cAAe,UAAA,CAC/B,OAAQ,UAAW,YAAA,CACnB,YAAa,eAAA,CACb,UAAW,YAEhBC,QAAAA,CAAAA,CACK,UAAW,WAAA,CACX,OAAQ,UAAW,QAAA,CACnB,QAAS,YAEdC,MAAAA,CAAAA,CACK,UAAW,eAAA,CACX,OAAQ,cAAe,QAAA,CACvB,QAAS,gBAGdC,OAAAA,CAAAA,CAEQ,yBAAA,CACC,wBAAyB,wBAAyB,0BAAA,CAGnD,kCAAA,CACC,wBAAA,CAA2BP,MAAO,wBAAyBE,KAAM,kBAErE,oBAAA,CAAsB,wBAAyB,0BAAA,CAC/C,OAAQ,yBAAA,CACR,aAAc,yBAAA,CACd,UAAW,UAAA,CACX,aAAc,iBAAA,CACd,OAAQ,kBAAA,CAEL,kBAAA,CAAA,CACGF,MAAO,SAAUC,QAAS,SAAUC,KAAM,QAAU,mBAG/DM,WAAAA,CAAAA,CACK,IAAK,yBAAA,CACL,KAAM,kBAAA,CACN,aAAc,iBAAA,CACd,QAAS,UAAA,CAEN,KAAA,CAEIR,MAAO,wBACPE,KAAM,OACND,QAAS,YAIrBQ,cAAAA,CAAAA,CACK,YAAa,UAAA,CACb,UAAW,UAAA,CACX,WAAY,iBAAA,CACZ,MAAO,yBAAA,CACP,IAAK,SAAU,QAAA,CACf,QAAS,eAEdC,cAAAA,CAAAA,CACK,YAAa,UAAA,CACb,WAAY,iBAAA,CACZ,MAAO,yBAAA,CACP,IAAK,SAAU,QAAA,CACf,QAAS","sources":["./node_modules/monaco-editor/esm/vs/basic-languages/dart/dart.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['/*', '*/']\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: \"'\", close: \"'\", notIn: ['string', 'comment'] },\r\n        { open: '\"', close: '\"', notIn: ['string'] },\r\n        { open: '`', close: '`', notIn: ['string', 'comment'] },\r\n        { open: '/**', close: ' */', notIn: ['string'] }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '<', close: '>' },\r\n        { open: \"'\", close: \"'\" },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '`', close: '`' }\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: /^\\s*\\s*#?region\\b/,\r\n            end: /^\\s*\\s*#?endregion\\b/\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: 'invalid',\r\n    tokenPostfix: '.dart',\r\n    keywords: [\r\n        'abstract',\r\n        'dynamic',\r\n        'implements',\r\n        'show',\r\n        'as',\r\n        'else',\r\n        'import',\r\n        'static',\r\n        'assert',\r\n        'enum',\r\n        'in',\r\n        'super',\r\n        'async',\r\n        'export',\r\n        'interface',\r\n        'switch',\r\n        'await',\r\n        'extends',\r\n        'is',\r\n        'sync',\r\n        'break',\r\n        'external',\r\n        'library',\r\n        'this',\r\n        'case',\r\n        'factory',\r\n        'mixin',\r\n        'throw',\r\n        'catch',\r\n        'false',\r\n        'new',\r\n        'true',\r\n        'class',\r\n        'final',\r\n        'null',\r\n        'try',\r\n        'const',\r\n        'finally',\r\n        'on',\r\n        'typedef',\r\n        'continue',\r\n        'for',\r\n        'operator',\r\n        'var',\r\n        'covariant',\r\n        'Function',\r\n        'part',\r\n        'void',\r\n        'default',\r\n        'get',\r\n        'rethrow',\r\n        'while',\r\n        'deferred',\r\n        'hide',\r\n        'return',\r\n        'with',\r\n        'do',\r\n        'if',\r\n        'set',\r\n        'yield'\r\n    ],\r\n    typeKeywords: ['int', 'double', 'String', 'bool'],\r\n    operators: [\r\n        '+',\r\n        '-',\r\n        '*',\r\n        '/',\r\n        '~/',\r\n        '%',\r\n        '++',\r\n        '--',\r\n        '==',\r\n        '!=',\r\n        '>',\r\n        '<',\r\n        '>=',\r\n        '<=',\r\n        '=',\r\n        '-=',\r\n        '/=',\r\n        '%=',\r\n        '>>=',\r\n        '^=',\r\n        '+=',\r\n        '*=',\r\n        '~/=',\r\n        '<<=',\r\n        '&=',\r\n        '!=',\r\n        '||',\r\n        '&&',\r\n        '&',\r\n        '|',\r\n        '^',\r\n        '~',\r\n        '<<',\r\n        '>>',\r\n        '!',\r\n        '>>>',\r\n        '??',\r\n        '?',\r\n        ':',\r\n        '|='\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    digits: /\\d+(_+\\d+)*/,\r\n    octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n    binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n    hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n    regexpctl: /[(){}\\[\\]\\$\\^|\\-*+?\\.]/,\r\n    regexpesc: /\\\\(?:[bBdDfnrstvwWn0\\\\\\/]|@regexpctl|c[A-Z]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4})/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [[/[{}]/, 'delimiter.bracket'], { include: 'common' }],\r\n        common: [\r\n            // identifiers and keywords\r\n            [\r\n                /[a-z_$][\\w$]*/,\r\n                {\r\n                    cases: {\r\n                        '@typeKeywords': 'type.identifier',\r\n                        '@keywords': 'keyword',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }\r\n            ],\r\n            [/[A-Z_$][\\w\\$]*/, 'type.identifier'],\r\n            // [/[A-Z][\\w\\$]*/, 'identifier'],\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // regular expression: ensure it is terminated before beginning (otherwise it is an opeator)\r\n            [\r\n                /\\/(?=([^\\\\\\/]|\\\\.)+\\/([gimsuy]*)(\\s*)(\\.|;|,|\\)|\\]|\\}|$))/,\r\n                { token: 'regexp', bracket: '@open', next: '@regexp' }\r\n            ],\r\n            // @ annotations.\r\n            [/@[a-zA-Z]+/, 'annotation'],\r\n            // variable\r\n            // delimiters and operators\r\n            [/[()\\[\\]]/, '@brackets'],\r\n            [/[<>](?!@symbols)/, '@brackets'],\r\n            [/!(?=([^=]|$))/, 'delimiter'],\r\n            [\r\n                /@symbols/,\r\n                {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }\r\n            ],\r\n            // numbers\r\n            [/(@digits)[eE]([\\-+]?(@digits))?/, 'number.float'],\r\n            [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?/, 'number.float'],\r\n            [/0[xX](@hexdigits)n?/, 'number.hex'],\r\n            [/0[oO]?(@octaldigits)n?/, 'number.octal'],\r\n            [/0[bB](@binarydigits)n?/, 'number.binary'],\r\n            [/(@digits)n?/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            // strings\r\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/'([^'\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/\"/, 'string', '@string_double'],\r\n            [/'/, 'string', '@string_single']\r\n            //   [/[a-zA-Z]+/, \"variable\"]\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@jsdoc'],\r\n            [/\\/\\*/, 'comment', '@comment'],\r\n            [/\\/\\/\\/.*$/, 'comment.doc'],\r\n            [/\\/\\/.*$/, 'comment']\r\n        ],\r\n        comment: [\r\n            [/[^\\/*]+/, 'comment'],\r\n            [/\\*\\//, 'comment', '@pop'],\r\n            [/[\\/*]/, 'comment']\r\n        ],\r\n        jsdoc: [\r\n            [/[^\\/*]+/, 'comment.doc'],\r\n            [/\\*\\//, 'comment.doc', '@pop'],\r\n            [/[\\/*]/, 'comment.doc']\r\n        ],\r\n        // We match regular expression quite precisely\r\n        regexp: [\r\n            [\r\n                /(\\{)(\\d+(?:,\\d*)?)(\\})/,\r\n                ['regexp.escape.control', 'regexp.escape.control', 'regexp.escape.control']\r\n            ],\r\n            [\r\n                /(\\[)(\\^?)(?=(?:[^\\]\\\\\\/]|\\\\.)+)/,\r\n                ['regexp.escape.control', { token: 'regexp.escape.control', next: '@regexrange' }]\r\n            ],\r\n            [/(\\()(\\?:|\\?=|\\?!)/, ['regexp.escape.control', 'regexp.escape.control']],\r\n            [/[()]/, 'regexp.escape.control'],\r\n            [/@regexpctl/, 'regexp.escape.control'],\r\n            [/[^\\\\\\/]/, 'regexp'],\r\n            [/@regexpesc/, 'regexp.escape'],\r\n            [/\\\\\\./, 'regexp.invalid'],\r\n            [\r\n                /(\\/)([gimsuy]*)/,\r\n                [{ token: 'regexp', bracket: '@close', next: '@pop' }, 'keyword.other']\r\n            ]\r\n        ],\r\n        regexrange: [\r\n            [/-/, 'regexp.escape.control'],\r\n            [/\\^/, 'regexp.invalid'],\r\n            [/@regexpesc/, 'regexp.escape'],\r\n            [/[^\\]]/, 'regexp'],\r\n            [\r\n                /\\]/,\r\n                {\r\n                    token: 'regexp.escape.control',\r\n                    next: '@pop',\r\n                    bracket: '@close'\r\n                }\r\n            ]\r\n        ],\r\n        string_double: [\r\n            [/[^\\\\\"\\$]+/, 'string'],\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"/, 'string', '@pop'],\r\n            [/\\$\\w+/, 'identifier']\r\n        ],\r\n        string_single: [\r\n            [/[^\\\\'\\$]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/'/, 'string', '@pop'],\r\n            [/\\$\\w+/, 'identifier']\r\n        ]\r\n    }\r\n};\r\n"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","end","language","defaultToken","tokenPostfix","keywords","typeKeywords","operators","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","regexpctl","regexpesc","tokenizer","root","include","common","cases","@typeKeywords","@keywords","@default","token","bracket","next","@operators","whitespace","comment","jsdoc","regexp","regexrange","string_double","string_single"],"version":3,"file":"dart.dbd96457.js.map"}