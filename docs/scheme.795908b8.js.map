{"mappings":"kxCAIWA,EAAAA,CACPC,SAAAA,CACIC,YAAa,IACbC,aAAAA,CAAe,KAAM,OAEzBC,SAAAA,CAAAA,CACK,IAAK,KAAA,CACL,IAAK,KAAA,CACL,IAAK,MAEVC,iBAAAA,CAAAA,CACMC,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAExBC,iBAAAA,CAAAA,CACMF,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,OAGjBE,EAAAA,CACPC,aAAc,GACdC,YAAY,EACZC,aAAc,UACdR,SAAAA,CAAAA,CACME,KAAM,IAAKC,MAAO,IAAKM,MAAO,0BAC9BP,KAAM,IAAKC,MAAO,IAAKM,MAAO,oBAC9BP,KAAM,IAAKC,MAAO,IAAKM,MAAO,qBAEpCC,SAAAA,CACI,OACA,KACA,MACA,OACA,KACA,OACA,OACA,OACA,MACA,MACA,OACA,SACA,UACA,eACA,SACA,OACA,QACA,OACA,SACA,OACA,QACA,UACA,QAEJC,UAAAA,CAAY,KAAM,MAClBC,UAAAA,CAAY,MAAO,OAAQ,SAAU,MAAO,KAAM,MAAO,SACzDC,UAAAA,CACIC,KAAAA,CAAAA,CACK,wBAAyB,cAAA,CACzB,2CAA4C,gBAAA,CAEzC,yEAAA,CACC,UAAW,QAAS,aAAA,CAEvBC,QAAS,gBACTA,QAAS,aAEP,kCAAA,CAEIC,MAAAA,CACIC,YAAa,UACbC,aAAc,WACdC,aAAc,YACdC,WAAY,iBAK5BC,QAAAA,CAAAA,CACK,UAAW,WAAA,CACX,MAAO,UAAW,SAAA,CAClB,MAAO,UAAW,QAAA,CAClB,QAAS,YAEdC,WAAAA,CAAAA,CACK,aAAc,SAAA,CACd,MAAO,UAAW,YAAA,CAClB,OAAQ,YAEbC,QAAAA,CAAAA,CACK,KAAM,SAAU,WAAA,CAChB,SAAU,SAAU,qBAEzBC,gBAAAA,CAAAA,CACK,WAAY,SAAU,WAAA,CACtB,UAAW,UAAA,CACX,MAAO,iBAAA,CACP,IAAK,SAAU,WAAA,CACf,MAAO","sources":["./node_modules/monaco-editor/esm/vs/basic-languages/scheme/scheme.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: ';',\r\n        blockComment: ['#|', '|#']\r\n    },\r\n    brackets: [\r\n        ['(', ')'],\r\n        ['{', '}'],\r\n        ['[', ']']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' }\r\n    ]\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    ignoreCase: true,\r\n    tokenPostfix: '.scheme',\r\n    brackets: [\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\r\n        { open: '{', close: '}', token: 'delimiter.curly' },\r\n        { open: '[', close: ']', token: 'delimiter.square' }\r\n    ],\r\n    keywords: [\r\n        'case',\r\n        'do',\r\n        'let',\r\n        'loop',\r\n        'if',\r\n        'else',\r\n        'when',\r\n        'cons',\r\n        'car',\r\n        'cdr',\r\n        'cond',\r\n        'lambda',\r\n        'lambda*',\r\n        'syntax-rules',\r\n        'format',\r\n        'set!',\r\n        'quote',\r\n        'eval',\r\n        'append',\r\n        'list',\r\n        'list?',\r\n        'member?',\r\n        'load'\r\n    ],\r\n    constants: ['#t', '#f'],\r\n    operators: ['eq?', 'eqv?', 'equal?', 'and', 'or', 'not', 'null?'],\r\n    tokenizer: {\r\n        root: [\r\n            [/#[xXoObB][0-9a-fA-F]+/, 'number.hex'],\r\n            [/[+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?/, 'number.float'],\r\n            [\r\n                /(?:\\b(?:(define|define-syntax|define-macro))\\b)(\\s+)((?:\\w|\\-|\\!|\\?)*)/,\r\n                ['keyword', 'white', 'variable']\r\n            ],\r\n            { include: '@whitespace' },\r\n            { include: '@strings' },\r\n            [\r\n                /[a-zA-Z_#][a-zA-Z0-9_\\-\\?\\!\\*]*/,\r\n                {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@constants': 'constant',\r\n                        '@operators': 'operators',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }\r\n            ]\r\n        ],\r\n        comment: [\r\n            [/[^\\|#]+/, 'comment'],\r\n            [/#\\|/, 'comment', '@push'],\r\n            [/\\|#/, 'comment', '@pop'],\r\n            [/[\\|#]/, 'comment']\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, 'white'],\r\n            [/#\\|/, 'comment', '@comment'],\r\n            [/;.*$/, 'comment']\r\n        ],\r\n        strings: [\r\n            [/\"$/, 'string', '@popall'],\r\n            [/\"(?=.)/, 'string', '@multiLineString']\r\n        ],\r\n        multiLineString: [\r\n            [/[^\\\\\"]+$/, 'string', '@popall'],\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/\\\\./, 'string.escape'],\r\n            [/\"/, 'string', '@popall'],\r\n            [/\\\\$/, 'string']\r\n        ]\r\n    }\r\n};\r\n"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","ignoreCase","tokenPostfix","token","keywords","constants","operators","tokenizer","root","include","cases","@keywords","@constants","@operators","@default","comment","whitespace","strings","multiLineString"],"version":3,"file":"scheme.795908b8.js.map"}