{"mappings":"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","sources":["./node_modules/monaco-editor/esm/vs/basic-languages/html/html.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { languages } from '../fillers/monaco-editor-core.js';\r\nvar EMPTY_ELEMENTS = [\r\n    'area',\r\n    'base',\r\n    'br',\r\n    'col',\r\n    'embed',\r\n    'hr',\r\n    'img',\r\n    'input',\r\n    'keygen',\r\n    'link',\r\n    'menuitem',\r\n    'meta',\r\n    'param',\r\n    'source',\r\n    'track',\r\n    'wbr'\r\n];\r\nexport var conf = {\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\r\n    comments: {\r\n        blockComment: ['<!--', '-->']\r\n    },\r\n    brackets: [\r\n        ['<!--', '-->'],\r\n        ['<', '>'],\r\n        ['{', '}'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" },\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '<', close: '>' }\r\n    ],\r\n    onEnterRules: [\r\n        {\r\n            beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))([_:\\\\w][_:\\\\w-.\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\r\n            afterText: /^<\\/([_:\\w][_:\\w-.\\d]*)\\s*>$/i,\r\n            action: {\r\n                indentAction: languages.IndentAction.IndentOutdent\r\n            }\r\n        },\r\n        {\r\n            beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\r\n            action: { indentAction: languages.IndentAction.Indent }\r\n        }\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp('^\\\\s*<!--\\\\s*#region\\\\b.*-->'),\r\n            end: new RegExp('^\\\\s*<!--\\\\s*#endregion\\\\b.*-->')\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.html',\r\n    ignoreCase: true,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            [/<!DOCTYPE/, 'metatag', '@doctype'],\r\n            [/<!--/, 'comment', '@comment'],\r\n            [/(<)((?:[\\w\\-]+:)?[\\w\\-]+)(\\s*)(\\/>)/, ['delimiter', 'tag', '', 'delimiter']],\r\n            [/(<)(script)/, ['delimiter', { token: 'tag', next: '@script' }]],\r\n            [/(<)(style)/, ['delimiter', { token: 'tag', next: '@style' }]],\r\n            [/(<)((?:[\\w\\-]+:)?[\\w\\-]+)/, ['delimiter', { token: 'tag', next: '@otherTag' }]],\r\n            [/(<\\/)((?:[\\w\\-]+:)?[\\w\\-]+)/, ['delimiter', { token: 'tag', next: '@otherTag' }]],\r\n            [/</, 'delimiter'],\r\n            [/[^<]+/] // text\r\n        ],\r\n        doctype: [\r\n            [/[^>]+/, 'metatag.content'],\r\n            [/>/, 'metatag', '@pop']\r\n        ],\r\n        comment: [\r\n            [/-->/, 'comment', '@pop'],\r\n            [/[^-]+/, 'comment.content'],\r\n            [/./, 'comment.content']\r\n        ],\r\n        otherTag: [\r\n            [/\\/?>/, 'delimiter', '@pop'],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/[ \\t\\r\\n]+/] // whitespace\r\n        ],\r\n        // -- BEGIN <script> tags handling\r\n        // After <script\r\n        script: [\r\n            [/type/, 'attribute.name', '@scriptAfterType'],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [\r\n                />/,\r\n                {\r\n                    token: 'delimiter',\r\n                    next: '@scriptEmbedded',\r\n                    nextEmbedded: 'text/javascript'\r\n                }\r\n            ],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/(<\\/)(script\\s*)(>)/, ['delimiter', 'tag', { token: 'delimiter', next: '@pop' }]]\r\n        ],\r\n        // After <script ... type\r\n        scriptAfterType: [\r\n            [/=/, 'delimiter', '@scriptAfterTypeEquals'],\r\n            [\r\n                />/,\r\n                {\r\n                    token: 'delimiter',\r\n                    next: '@scriptEmbedded',\r\n                    nextEmbedded: 'text/javascript'\r\n                }\r\n            ],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <script ... type =\r\n        scriptAfterTypeEquals: [\r\n            [\r\n                /\"([^\"]*)\"/,\r\n                {\r\n                    token: 'attribute.value',\r\n                    switchTo: '@scriptWithCustomType.$1'\r\n                }\r\n            ],\r\n            [\r\n                /'([^']*)'/,\r\n                {\r\n                    token: 'attribute.value',\r\n                    switchTo: '@scriptWithCustomType.$1'\r\n                }\r\n            ],\r\n            [\r\n                />/,\r\n                {\r\n                    token: 'delimiter',\r\n                    next: '@scriptEmbedded',\r\n                    nextEmbedded: 'text/javascript'\r\n                }\r\n            ],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <script ... type = $S2\r\n        scriptWithCustomType: [\r\n            [\r\n                />/,\r\n                {\r\n                    token: 'delimiter',\r\n                    next: '@scriptEmbedded.$S2',\r\n                    nextEmbedded: '$S2'\r\n                }\r\n            ],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        scriptEmbedded: [\r\n            [/<\\/script/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }],\r\n            [/[^<]+/, '']\r\n        ],\r\n        // -- END <script> tags handling\r\n        // -- BEGIN <style> tags handling\r\n        // After <style\r\n        style: [\r\n            [/type/, 'attribute.name', '@styleAfterType'],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [\r\n                />/,\r\n                {\r\n                    token: 'delimiter',\r\n                    next: '@styleEmbedded',\r\n                    nextEmbedded: 'text/css'\r\n                }\r\n            ],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/(<\\/)(style\\s*)(>)/, ['delimiter', 'tag', { token: 'delimiter', next: '@pop' }]]\r\n        ],\r\n        // After <style ... type\r\n        styleAfterType: [\r\n            [/=/, 'delimiter', '@styleAfterTypeEquals'],\r\n            [\r\n                />/,\r\n                {\r\n                    token: 'delimiter',\r\n                    next: '@styleEmbedded',\r\n                    nextEmbedded: 'text/css'\r\n                }\r\n            ],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <style ... type =\r\n        styleAfterTypeEquals: [\r\n            [\r\n                /\"([^\"]*)\"/,\r\n                {\r\n                    token: 'attribute.value',\r\n                    switchTo: '@styleWithCustomType.$1'\r\n                }\r\n            ],\r\n            [\r\n                /'([^']*)'/,\r\n                {\r\n                    token: 'attribute.value',\r\n                    switchTo: '@styleWithCustomType.$1'\r\n                }\r\n            ],\r\n            [\r\n                />/,\r\n                {\r\n                    token: 'delimiter',\r\n                    next: '@styleEmbedded',\r\n                    nextEmbedded: 'text/css'\r\n                }\r\n            ],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <style ... type = $S2\r\n        styleWithCustomType: [\r\n            [\r\n                />/,\r\n                {\r\n                    token: 'delimiter',\r\n                    next: '@styleEmbedded.$S2',\r\n                    nextEmbedded: '$S2'\r\n                }\r\n            ],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        styleEmbedded: [\r\n            [/<\\/style/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }],\r\n            [/[^<]+/, '']\r\n        ]\r\n        // -- END <style> tags handling\r\n    }\r\n};\r\n// TESTED WITH:\r\n// <!DOCTYPE html>\r\n// <html>\r\n// <head>\r\n//   <title>Monarch Workbench</title>\r\n//   <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n//   <!----\r\n//   -- -- -- a comment -- -- --\r\n//   ---->\r\n//   <style bah=\"bah\">\r\n//     body { font-family: Consolas; } /* nice */\r\n//   </style>\r\n// </head\r\n// >\r\n// a = \"asd\"\r\n// <body>\r\n//   <br/>\r\n//   <div\r\n//   class\r\n//   =\r\n//   \"test\"\r\n//   >\r\n//     <script>\r\n//       function() {\r\n//         alert(\"hi </ script>\"); // javascript\r\n//       };\r\n//     </script>\r\n//     <script\r\n// \tbah=\"asdfg\"\r\n// \ttype=\"text/css\"\r\n// \t>\r\n//   .bar { text-decoration: underline; }\r\n//     </script>\r\n//   </div>\r\n// </body>\r\n// </html>\r\n"],"names":["EMPTY_ELEMENTS","conf","wordPattern","comments","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","onEnterRules","beforeText","RegExp","join","afterText","action","indentAction","IndentAction","IndentOutdent","Indent","folding","markers","start","end","language","defaultToken","tokenPostfix","ignoreCase","tokenizer","root","token","next","doctype","comment","otherTag","script","nextEmbedded","scriptAfterType","scriptAfterTypeEquals","switchTo","scriptWithCustomType","scriptEmbedded","style","styleAfterType","styleAfterTypeEquals","styleWithCustomType","styleEmbedded"],"version":3,"file":"html.20db86d3.js.map"}