{"mappings":"kxCAIWA,EAAAA,CACPC,SAAAA,CACIC,YAAa,OAEjBC,SAAAA,CAAAA,CACK,IAAK,KAAA,CACL,IAAK,KAAA,CACL,IAAK,MAEVC,iBAAAA,CAAAA,CACMC,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAExBC,iBAAAA,CAAAA,CACMF,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAExBE,QAAAA,CACIC,QAAAA,CACIC,MAAAA,IAAWC,OAAO,gCAClBC,IAAAA,IAASD,OAAO,sCAIjBE,EAAAA,CACPC,aAAc,GACdC,YAAY,EACZC,aAAc,OACdb,SAAAA,CAAAA,CACMc,MAAO,oBAAqBZ,KAAM,IAAKC,MAAO,MAC9CW,MAAO,wBAAyBZ,KAAM,IAAKC,MAAO,MAClDW,MAAO,mBAAoBZ,KAAM,IAAKC,MAAO,MAEnDY,SAAU,4FAEVC,QAAS,0BACTC,QAAS,wEAETC,UAAAA,CACIC,KAAAA,CAAAA,CACK,wBAAA,CAA0B,GAAI,YAAA,CAC9B,yBAAA,CAAA,CAA6BL,MAAO,YAAeA,MAAO,iBAE1D,aAAc,KAEd,iBAAkB,wBAAA,CAClB,iBAAkB,yBAElB,eAAgB,KAEhB,OAAQ,YAER,UAAW,YAAA,CACX,gBAAiB,aAEjB,aAAc,aAAA,CACd,WAAY,cAEZ,2BAA4B,gBAAA,CAC5B,gCAAiC,cAAA,CACjC,MAAO,WAEP,QAAS,cAET,IAAK,SAAU,aAAA,CACf,IAAK,SAAU,cAEpBM,OAAAA,CAAAA,CAEQ,YAAA,CAEIC,MAAAA,CACIC,OAAA,CAAUR,MAAO,SAAUS,KAAM,WACjCC,WAAY,aAIvB,WAAY,iBAAA,CACZ,MAAO,yBAAA,CACP,WAAY,YAAA,CACZ,gBAAiB,YAAA,CAEd,OAAA,CAEIH,MAAAA,CACII,UAAA,CAAaX,MAAO,SAAUS,KAAM,QACpCC,WAAY,aAIvB,IAAK,SAAU","sources":["./node_modules/monaco-editor/esm/vs/basic-languages/bat/bat.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: 'REM'\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' }\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp('^\\\\s*(::\\\\s*|REM\\\\s+)#region'),\r\n            end: new RegExp('^\\\\s*(::\\\\s*|REM\\\\s+)#endregion')\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    ignoreCase: true,\r\n    tokenPostfix: '.bat',\r\n    brackets: [\r\n        { token: 'delimiter.bracket', open: '{', close: '}' },\r\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\r\n        { token: 'delimiter.square', open: '[', close: ']' }\r\n    ],\r\n    keywords: /call|defined|echo|errorlevel|exist|for|goto|if|pause|set|shift|start|title|not|pushd|popd/,\r\n    // we include these common regular expressions\r\n    symbols: /[=><!~?&|+\\-*\\/\\^;\\.,]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            [/^(\\s*)(rem(?:\\s.*|))$/, ['', 'comment']],\r\n            [/(\\@?)(@keywords)(?!\\w)/, [{ token: 'keyword' }, { token: 'keyword.$2' }]],\r\n            // whitespace\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            // blocks\r\n            [/setlocal(?!\\w)/, 'keyword.tag-setlocal'],\r\n            [/endlocal(?!\\w)/, 'keyword.tag-setlocal'],\r\n            // words\r\n            [/[a-zA-Z_]\\w*/, ''],\r\n            // labels\r\n            [/:\\w*/, 'metatag'],\r\n            // variables\r\n            [/%[^%]+%/, 'variable'],\r\n            [/%%[\\w]+(?!\\w)/, 'variable'],\r\n            // punctuations\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/@symbols/, 'delimiter'],\r\n            // numbers\r\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n            [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'],\r\n            [/\\d+/, 'number'],\r\n            // punctuation: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            // strings:\r\n            [/\"/, 'string', '@string.\"'],\r\n            [/'/, 'string', \"@string.'\"]\r\n        ],\r\n        string: [\r\n            [\r\n                /[^\\\\\"'%]+/,\r\n                {\r\n                    cases: {\r\n                        '@eos': { token: 'string', next: '@popall' },\r\n                        '@default': 'string'\r\n                    }\r\n                }\r\n            ],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/%[\\w ]+%/, 'variable'],\r\n            [/%%[\\w]+(?!\\w)/, 'variable'],\r\n            [\r\n                /[\"']/,\r\n                {\r\n                    cases: {\r\n                        '$#==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': 'string'\r\n                    }\r\n                }\r\n            ],\r\n            [/$/, 'string', '@popall']\r\n        ]\r\n    }\r\n};\r\n"],"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","ignoreCase","tokenPostfix","token","keywords","symbols","escapes","tokenizer","root","string","cases","@eos","next","@default","$#==$S2"],"version":3,"file":"bat.3ad6ab66.js.map"}