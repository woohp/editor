{"mappings":"kxCAIWA,EAAAA,CACPC,SAAAA,CAAAA,CACK,IAAK,KAAA,CACL,IAAK,KAAA,CACL,IAAK,MAEVC,iBAAAA,CAAAA,CACMC,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAExBC,iBAAAA,CAAAA,CACMF,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,MAClBD,KAAM,IAAKC,MAAO,OAGjBE,EAAAA,CACPC,aAAc,GACdC,aAAc,cACdC,SAAU,cACVC,UAAAA,CACIC,KAAAA,CAAAA,CACMC,QAAS,gBACTA,QAAS,aACV,iBAAA,CAAmB,UAAW,KAAA,CAC9B,oBAAA,CAAsB,UAAW,GAAA,CAAMC,MAAO,WAAYC,KAAM,iBAE7D,sHAAA,CACED,MAAO,UAAWC,KAAM,gBAGlCC,UAAAA,CAAAA,CACMH,QAAS,gBACTA,QAAS,aAEP,cAAA,CAEII,MAAAA,CACIC,OAAA,CAAUJ,MAAO,WAAYC,KAAM,WACnCI,WAAY,eAKpB,KAAA,CAEIF,MAAAA,CACIC,OAAQ,GACRC,WAAY,OAKpB,IAAA,CAEIF,MAAAA,CACIC,OAAA,CAAUJ,MAAO,GAAIC,KAAM,WAC3BI,WAAY,OAM5BC,WAAAA,CAAAA,CAEQ,MAAA,CAEIH,MAAAA,CACIC,OAAA,CAAUJ,MAAO,GAAIC,KAAM,WAC3BI,WAAY,OAK5BE,QAAAA,CAAAA,CAAW,UAAW,UAAW,YAEjCC,QAAAA,CAAAA,CACK,OAAQ,GAAI,WAAA,CACZ,MAAO,IAAA,CACP,KAAM,SAAU,WAAA,CAChB,IAAK,SAAU,eAAA,CACf,KAAM,SAAU,WAAA,CAChB,IAAK,SAAU,mBAEpBC,WAAAA,CAAAA,CAEQ,WAAA,CAEIN,MAAAA,CACIC,OAAA,CAAUJ,MAAO,SAAUC,KAAM,WACjCI,WAAY,aAIvB,MAAO,iBAAA,CACP,KAAM,SAAU,WAAA,CAChB,IAAK,SAAU,QAAA,CACf,cAAe,YAAA,CACf,MAAO,UAAA,CACP,IAAK,SAAU,YAEpBK,cAAAA,CAAAA,CAEQ,WAAA,CAEIP,MAAAA,CACIC,OAAA,CAAUJ,MAAO,SAAUC,KAAM,WACjCI,WAAY,aAIvB,MAAO,iBAAA,CACP,KAAM,SAAU,WAAA,CAChB,IAAK,SAAU,QAAA,CACf,cAAe,YAAA,CACf,MAAO,UAAA,CACP,IAAK,SAAU","sources":["./node_modules/monaco-editor/esm/vs/basic-languages/dockerfile/dockerfile.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var conf = {\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" }\r\n    ]\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.dockerfile',\r\n    variable: /\\${?[\\w]+}?/,\r\n    tokenizer: {\r\n        root: [\r\n            { include: '@whitespace' },\r\n            { include: '@comment' },\r\n            [/(ONBUILD)(\\s+)/, ['keyword', '']],\r\n            [/(ENV)(\\s+)([\\w]+)/, ['keyword', '', { token: 'variable', next: '@arguments' }]],\r\n            [\r\n                /(FROM|MAINTAINER|RUN|EXPOSE|ENV|ADD|ARG|VOLUME|LABEL|USER|WORKDIR|COPY|CMD|STOPSIGNAL|SHELL|HEALTHCHECK|ENTRYPOINT)/,\r\n                { token: 'keyword', next: '@arguments' }\r\n            ]\r\n        ],\r\n        arguments: [\r\n            { include: '@whitespace' },\r\n            { include: '@strings' },\r\n            [\r\n                /(@variable)/,\r\n                {\r\n                    cases: {\r\n                        '@eos': { token: 'variable', next: '@popall' },\r\n                        '@default': 'variable'\r\n                    }\r\n                }\r\n            ],\r\n            [\r\n                /\\\\/,\r\n                {\r\n                    cases: {\r\n                        '@eos': '',\r\n                        '@default': ''\r\n                    }\r\n                }\r\n            ],\r\n            [\r\n                /./,\r\n                {\r\n                    cases: {\r\n                        '@eos': { token: '', next: '@popall' },\r\n                        '@default': ''\r\n                    }\r\n                }\r\n            ]\r\n        ],\r\n        // Deal with white space, including comments\r\n        whitespace: [\r\n            [\r\n                /\\s+/,\r\n                {\r\n                    cases: {\r\n                        '@eos': { token: '', next: '@popall' },\r\n                        '@default': ''\r\n                    }\r\n                }\r\n            ]\r\n        ],\r\n        comment: [[/(^#.*$)/, 'comment', '@popall']],\r\n        // Recognize strings, including those broken across lines with \\ (but not without)\r\n        strings: [\r\n            [/\\\\'$/, '', '@popall'],\r\n            [/\\\\'/, ''],\r\n            [/'$/, 'string', '@popall'],\r\n            [/'/, 'string', '@stringBody'],\r\n            [/\"$/, 'string', '@popall'],\r\n            [/\"/, 'string', '@dblStringBody']\r\n        ],\r\n        stringBody: [\r\n            [\r\n                /[^\\\\\\$']/,\r\n                {\r\n                    cases: {\r\n                        '@eos': { token: 'string', next: '@popall' },\r\n                        '@default': 'string'\r\n                    }\r\n                }\r\n            ],\r\n            [/\\\\./, 'string.escape'],\r\n            [/'$/, 'string', '@popall'],\r\n            [/'/, 'string', '@pop'],\r\n            [/(@variable)/, 'variable'],\r\n            [/\\\\$/, 'string'],\r\n            [/$/, 'string', '@popall']\r\n        ],\r\n        dblStringBody: [\r\n            [\r\n                /[^\\\\\\$\"]/,\r\n                {\r\n                    cases: {\r\n                        '@eos': { token: 'string', next: '@popall' },\r\n                        '@default': 'string'\r\n                    }\r\n                }\r\n            ],\r\n            [/\\\\./, 'string.escape'],\r\n            [/\"$/, 'string', '@popall'],\r\n            [/\"/, 'string', '@pop'],\r\n            [/(@variable)/, 'variable'],\r\n            [/\\\\$/, 'string'],\r\n            [/$/, 'string', '@popall']\r\n        ]\r\n    }\r\n};\r\n"],"names":["conf","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","tokenPostfix","variable","tokenizer","root","include","token","next","arguments","cases","@eos","@default","whitespace","comment","strings","stringBody","dblStringBody"],"version":3,"file":"dockerfile.68b76f6c.js.map"}